{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend\",\"filename\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dhanush/dev_world/Tinder-clone/tinder_backend",
      "filename": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dhanush/dev_world/Tinder-clone/tinder_backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar mongoose = require('mongoose');\n\nvar Cors = require('cors');\n\nconst Cards = require('./dbCards.js'); // App Config\n\n\nconst app = express();\nconst port = process.env.PORT || 8001;\nconst connection_url = 'mongodb+srv://Tinder_admin:<vWHje2N10tiFGlaX>@cluster0.bfl0h.mongodb.net/tinderdb?retryWrites=true&w=majority'; // Middlewares\n\napp.use(express.json());\napp.use(Cors()); //DB config\n\nmongoose.connect(connection_url, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}); // API Endpoints\n\napp.get('/', (req, res) => res.status(200).send(\"Hello world\"));\napp.post('/tinder/cards', (req, res) => {\n  const dbCard = req.body;\n  Cards.create(dbCard, (err, data) => {\n    if (err) {\n      res.status(500).send(err);\n    } else {\n      res.status(201).send(data);\n    }\n  });\n});\napp.get('/tinder/cards', (req, res) => {\n  Cards.find((err, data) => {\n    if (err) {\n      res.status(500).send(err);\n    } else {\n      res.status(201).send(data);\n    }\n  });\n}); //Listener\n\napp.listen(port, () => console.log(`listening on local host: ${port}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiQ29ycyIsIkNhcmRzIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiY29ubmVjdGlvbl91cmwiLCJ1c2UiLCJqc29uIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZUNyZWF0ZUluZGV4IiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsInBvc3QiLCJkYkNhcmQiLCJib2R5IiwiY3JlYXRlIiwiZXJyIiwiZGF0YSIsImZpbmQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxNQUFNRyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxjQUFELENBQXJCLEMsQ0FFQTs7O0FBQ0EsTUFBTUksR0FBRyxHQUFHTCxPQUFPLEVBQW5CO0FBQ0EsTUFBTU0sSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLE1BQU1DLGNBQWMsR0FBRywrR0FBdkIsQyxDQUVBOztBQUNBTCxHQUFHLENBQUNNLEdBQUosQ0FBUVgsT0FBTyxDQUFDWSxJQUFSLEVBQVI7QUFDQVAsR0FBRyxDQUFDTSxHQUFKLENBQVFSLElBQUksRUFBWixFLENBRUE7O0FBQ0FELFFBQVEsQ0FBQ1csT0FBVCxDQUFpQkgsY0FBakIsRUFBaUM7QUFDN0JJLEVBQUFBLGVBQWUsRUFBRSxJQURZO0FBRTdCQyxFQUFBQSxjQUFjLEVBQUUsSUFGYTtBQUc3QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFIUyxDQUFqQyxFLENBT0E7O0FBQ0FYLEdBQUcsQ0FBQ1ksR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBY0EsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsYUFBckIsQ0FBM0I7QUFDQWhCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBUyxlQUFULEVBQTBCLENBQUNKLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3BDLFFBQU1JLE1BQU0sR0FBR0wsR0FBRyxDQUFDTSxJQUFuQjtBQUNBcEIsRUFBQUEsS0FBSyxDQUFDcUIsTUFBTixDQUFhRixNQUFiLEVBQXFCLENBQUNHLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBQ2hDLFFBQUdELEdBQUgsRUFBUTtBQUNKUCxNQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkssR0FBckI7QUFDSCxLQUZELE1BRU87QUFDSFAsTUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJNLElBQXJCO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FURDtBQVdBdEIsR0FBRyxDQUFDWSxHQUFKLENBQVEsZUFBUixFQUF5QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNuQ2YsRUFBQUEsS0FBSyxDQUFDd0IsSUFBTixDQUFXLENBQUNGLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBQ3RCLFFBQUdELEdBQUgsRUFBUTtBQUNKUCxNQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkssR0FBckI7QUFDSCxLQUZELE1BRU87QUFDSFAsTUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJNLElBQXJCO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FSRCxFLENBVUE7O0FBQ0F0QixHQUFHLENBQUN3QixNQUFKLENBQVd2QixJQUFYLEVBQWlCLE1BQU13QixPQUFPLENBQUNDLEdBQVIsQ0FBYSw0QkFBMkJ6QixJQUFLLEVBQTdDLENBQXZCIiwic291cmNlUm9vdCI6Ii9ob21lL2RoYW51c2gvZGV2X3dvcmxkL1RpbmRlci1jbG9uZS90aW5kZXJfYmFja2VuZC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG52YXIgQ29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IENhcmRzID0gcmVxdWlyZSgnLi9kYkNhcmRzLmpzJyk7XG5cbi8vIEFwcCBDb25maWdcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDE7XG5jb25zdCBjb25uZWN0aW9uX3VybCA9ICdtb25nb2RiK3NydjovL1RpbmRlcl9hZG1pbjo8dldIamUyTjEwdGlGR2xhWD5AY2x1c3RlcjAuYmZsMGgubW9uZ29kYi5uZXQvdGluZGVyZGI/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5J1xuXG4vLyBNaWRkbGV3YXJlc1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKENvcnMoKSk7XG5cbi8vREIgY29uZmlnXG5tb25nb29zZS5jb25uZWN0KGNvbm5lY3Rpb25fdXJsLCB7XG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIHVzZUNyZWF0ZUluZGV4OiB0cnVlLFxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcblxufSlcblxuLy8gQVBJIEVuZHBvaW50c1xuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4gcmVzLnN0YXR1cygyMDApLnNlbmQoXCJIZWxsbyB3b3JsZFwiKSk7XG5hcHAucG9zdCgnL3RpbmRlci9jYXJkcycsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGRiQ2FyZCA9IHJlcS5ib2R5O1xuICAgIENhcmRzLmNyZWF0ZShkYkNhcmQsIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZGF0YSk7XG4gICAgICAgIH1cbiAgICB9KVxufSk7XG5cbmFwcC5nZXQoJy90aW5kZXIvY2FyZHMnLCAocmVxLCByZXMpID0+IHtcbiAgICBDYXJkcy5maW5kKChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZGF0YSk7XG4gICAgICAgIH1cbiAgICB9KVxufSlcblxuLy9MaXN0ZW5lclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uIGxvY2FsIGhvc3Q6ICR7cG9ydH1gKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "mongoose",
        "Cors",
        "Cards",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "connection_url",
        "use",
        "json",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "get",
        "req",
        "res",
        "status",
        "send",
        "post",
        "dbCard",
        "body",
        "create",
        "err",
        "data",
        "find",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,cAAD,CAArB,C,CAEA;;;AACA,MAAMI,GAAG,GAAGL,OAAO,EAAnB;AACA,MAAMM,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,cAAc,GAAG,+GAAvB,C,CAEA;;AACAL,GAAG,CAACM,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAP,GAAG,CAACM,GAAJ,CAAQR,IAAI,EAAZ,E,CAEA;;AACAD,QAAQ,CAACW,OAAT,CAAiBH,cAAjB,EAAiC;AAC7BI,EAAAA,eAAe,EAAE,IADY;AAE7BC,EAAAA,cAAc,EAAE,IAFa;AAG7BC,EAAAA,kBAAkB,EAAE;AAHS,CAAjC,E,CAOA;;AACAX,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAArB,CAA3B;AACAhB,GAAG,CAACiB,IAAJ,CAAS,eAAT,EAA0B,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAMI,MAAM,GAAGL,GAAG,CAACM,IAAnB;AACApB,EAAAA,KAAK,CAACqB,MAAN,CAAaF,MAAb,EAAqB,CAACG,GAAD,EAAMC,IAAN,KAAe;AAChC,QAAGD,GAAH,EAAQ;AACJP,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,KAFD,MAEO;AACHP,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,IAArB;AACH;AACJ,GAND;AAOH,CATD;AAWAtB,GAAG,CAACY,GAAJ,CAAQ,eAAR,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCf,EAAAA,KAAK,CAACwB,IAAN,CAAW,CAACF,GAAD,EAAMC,IAAN,KAAe;AACtB,QAAGD,GAAH,EAAQ;AACJP,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,KAFD,MAEO;AACHP,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,IAArB;AACH;AACJ,GAND;AAOH,CARD,E,CAUA;;AACAtB,GAAG,CAACwB,MAAJ,CAAWvB,IAAX,EAAiB,MAAMwB,OAAO,CAACC,GAAR,CAAa,4BAA2BzB,IAAK,EAA7C,CAAvB",
      "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
      "sourcesContent": [
        "var express = require('express');\nvar mongoose = require('mongoose');\nvar Cors = require('cors');\nconst Cards = require('./dbCards.js');\n\n// App Config\nconst app = express();\nconst port = process.env.PORT || 8001;\nconst connection_url = 'mongodb+srv://Tinder_admin:<vWHje2N10tiFGlaX>@cluster0.bfl0h.mongodb.net/tinderdb?retryWrites=true&w=majority'\n\n// Middlewares\napp.use(express.json());\napp.use(Cors());\n\n//DB config\nmongoose.connect(connection_url, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true,\n\n})\n\n// API Endpoints\napp.get('/', (req, res) => res.status(200).send(\"Hello world\"));\napp.post('/tinder/cards', (req, res) => {\n    const dbCard = req.body;\n    Cards.create(dbCard, (err, data) => {\n        if(err) {\n            res.status(500).send(err);\n        } else {\n            res.status(201).send(data);\n        }\n    })\n});\n\napp.get('/tinder/cards', (req, res) => {\n    Cards.find((err, data) => {\n        if(err) {\n            res.status(500).send(err);\n        } else {\n            res.status(201).send(data);\n        }\n    })\n})\n\n//Listener\napp.listen(port, () => console.log(`listening on local host: ${port}`));"
      ]
    },
    "sourceType": "module",
    "mtime": 1629200392636
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend\",\"filename\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend/dbCards.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dhanush/dev_world/Tinder-clone/tinder_backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dhanush/dev_world/Tinder-clone/tinder_backend",
      "filename": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/dbCards.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/dhanush/dev_world/Tinder-clone/tinder_backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/dbCards.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/dbCards.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
        "sourceFileName": "dbCards.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst cardSchema = mongoose.Schema({\n  name: String,\n  imgUrl: String\n});\nmodule.exports = mongoose.model('cards', cardSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ2FyZHMuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiY2FyZFNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJpbWdVcmwiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBRUEsTUFBTUMsVUFBVSxHQUFHRixRQUFRLENBQUNHLE1BQVQsQ0FBZ0I7QUFDL0JDLEVBQUFBLElBQUksRUFBRUMsTUFEeUI7QUFFL0JDLEVBQUFBLE1BQU0sRUFBRUQ7QUFGdUIsQ0FBaEIsQ0FBbkI7QUFLQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixRQUFRLENBQUNTLEtBQVQsQ0FBZSxPQUFmLEVBQXdCUCxVQUF4QixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kaGFudXNoL2Rldl93b3JsZC9UaW5kZXItY2xvbmUvdGluZGVyX2JhY2tlbmQvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5jb25zdCBjYXJkU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBuYW1lOiBTdHJpbmcsXG4gICAgaW1nVXJsOiBTdHJpbmdcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdjYXJkcycsIGNhcmRTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dbCards.js"
      ],
      "names": [
        "mongoose",
        "require",
        "cardSchema",
        "Schema",
        "name",
        "String",
        "imgUrl",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB;AAC/BC,EAAAA,IAAI,EAAEC,MADyB;AAE/BC,EAAAA,MAAM,EAAED;AAFuB,CAAhB,CAAnB;AAKAE,MAAM,CAACC,OAAP,GAAiBR,QAAQ,CAACS,KAAT,CAAe,OAAf,EAAwBP,UAAxB,CAAjB",
      "sourceRoot": "/home/dhanush/dev_world/Tinder-clone/tinder_backend/",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\nconst cardSchema = mongoose.Schema({\n    name: String,\n    imgUrl: String\n});\n\nmodule.exports = mongoose.model('cards', cardSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1629199942517
  }
}